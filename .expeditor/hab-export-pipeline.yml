expeditor:
  secrets:
    PIPELINE_HAB_AUTH_TOKEN:
      path: account/static/habitat/chef-ci
      field: auth_token # Production Builder
      # acceptance_auth_token = acceptance
  accounts:
    - aws/chef-cd
  defaults:
    buildkite:
      timeout_in_minutes: 45
      env:
        HAB_ORIGIN: "chef-demo"
        PIPELINE_HAB_BLDR_URL: "https://bldr.habitat.sh"
        # Necessary to prevent old studios from poisoning builds after core plans refreshes
        HAB_STUDIO_SECRET_HAB_PREFER_LOCAL_CHEF_DEPS: "true"
        HAB_STUDIO_SECRET_HAB_REFRESH_CHANNEL: "stable"
        HAB_AUTH_TOKEN: "super-secret-auth-token"

steps:

  - label: ":habitat: export docker chef-demo/hello-omnibus-harmony"
    plugins:
      - chef/habitat#af9a2d647565034a4816d86a886c6cf8fda9bc35:
          export: chef-demo/hello-omnibus-harmony
          format: docker
    command:
      - echo "--- Executing  hooks/command from habitat-plugin -Docker"
     # - bash commands/export.sh
    expeditor:
      accounts:
        - aws/chef-cd
      executor:
        linux:
          privileged: true
          single-use: true
  - label: ":habitat: export tarball chef-demo/hello-omnibus-harmony"
    plugins:
      - chef/habitat#af9a2d647565034a4816d86a886c6cf8fda9bc35:
          export: chef-demo/hello-omnibus-harmony
          format: tarball
    command:
      - echo "--- Executing  hooks/command from habitat-plugin -TAR "
     # - bash commands/export.sh
    expeditor:
      accounts:
        - aws/chef-cd
      executor:
        linux:
          privileged: true
          single-use: true
  # - label: "[:windows: build hab-pkg-export-tar]"
  #   command:
  #     - powershell .expeditor/scripts/release_habitat/build_component.ps1 pkg-export-tar
  #   expeditor:
  #     executor:
  #       docker:
  #         host_os: windows
  #         environment:
  #           - BUILD_PKG_TARGET=x86_64-windows
  #           - BUILDKITE_AGENT_ACCESS_TOKEN
